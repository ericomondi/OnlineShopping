import React, { useState, useEffect } from "react";
import {
  ShoppingCart,
  Search as SearchIcon,
  Star,
  Truck,
  Shield,
  RotateCcw,
  ChevronLeft,
  ChevronRight,

  User,
  Menu
} from "lucide-react";
import axios from "axios";
import { useNavigate } from "react-router-dom";

// Types
interface Category {
  id: number;
  name: string;
}

interface Subcategory {
  id: number;
  name: string;
  description: string | null;
  category_id: number;
}

interface Product {
  id: number;
  name: string;
  price: number;
  original_price: number;
  rating: number;
  discount: number;
  is_new: boolean;
  category: Category;
  images: Array<{ id: number; img_url: string }>;
}

const categoryIcons: Record<string, React.ReactNode> = {
  "Kili Featured": <Star className="w-5 h-5 inline-block mr-2 text-yellow-500" />,
  "TV,Audio&Video": <Truck className="w-5 h-5 inline-block mr-2 text-blue-500" />,
  "Phones & Accessories": <SearchIcon className="w-5 h-5 inline-block mr-2 text-green-500" />,
  "Home & Kitchen": <Shield className="w-5 h-5 inline-block mr-2 text-purple-500" />,
  "Appliances": <RotateCcw className="w-5 h-5 inline-block mr-2 text-indigo-500" />,
  "Bags": <ShoppingCart className="w-5 h-5 inline-block mr-2 text-orange-500" />,
  "Clothes": <User className="w-5 h-5 inline-block mr-2 text-gray-500" />,
  "Watches & Jewellery": <Star className="w-5 h-5 inline-block mr-2 text-yellow-400" />,
  "Computers & Accessories": <SearchIcon className="w-5 h-5 inline-block mr-2 text-blue-400" />,
};

const carouselImages = [
  {
    url: "https://images.unsplash.com/photo-1513708927688-890a5b7e1d3a?auto=format&fit=crop&w=1200&q=80",
    caption: "Up to 50% OFF on Home Appliances!",
    cta: "Shop Appliances",
  },
  {
    url: "https://images.unsplash.com/photo-1506744038136-46273834b3fb?auto=format&fit=crop&w=1200&q=80",
    caption: "Get Free Gifts on Select Phones!",
    cta: "See Phones",
  },
  {
    url: "https://images.unsplash.com/photo-1465101046530-73398c7f28ca?auto=format&fit=crop&w=1200&q=80",
    caption: "New Arrivals: Fashion & More",
    cta: "Explore Fashion",
  },
];

const Test: React.FC = () => {
  const navigate = useNavigate();
  const [currentSlide, setCurrentSlide] = useState(0);
  const [categories, setCategories] = useState<Category[]>([]);
  const [subcategories, setSubcategories] = useState<Subcategory[]>([]);
  const [products, setProducts] = useState<Product[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  const [flashSaleEnd, setFlashSaleEnd] = useState<Date | null>(null);
  const [flashSaleProducts, setFlashSaleProducts] = useState<Product[]>([]);
  const [carouselIndex, setCarouselIndex] = useState(0);
  const [sidebarOpen, setSidebarOpen] = useState(false);
  const [activeTab, setActiveTab] = useState("What's New");
  const [flashSalesTimeLeft, setFlashSalesTimeLeft] = useState(25 * 60 + 48); // 25m 48s in seconds
  const [flippingCardIndex, setFlippingCardIndex] = useState(0); // State to track the flipping card
  const [expandedCategories, setExpandedCategories] = useState<string[]>([]);

  // Fetch categories, subcategories and products
  useEffect(() => {
    const fetchData = async () => {
      setIsLoading(true);
      try {
        const [catRes, subcatRes, prodRes] = await Promise.all([
          axios.get(`${import.meta.env.VITE_API_BASE_URL}/public/categories`),
          axios.get(`${import.meta.env.VITE_API_BASE_URL}/public/subcategories`),
          axios.get(`${import.meta.env.VITE_API_BASE_URL}/public/products?limit=50`),
        ]);
        setCategories(catRes.data);
        setSubcategories(subcatRes.data);
        setProducts(prodRes.data.items);
        setFlashSaleProducts(prodRes.data.items.slice(0, 4));
        setFlashSaleEnd(new Date(Date.now() + 60 * 60 * 1000));
      } catch (e) {
        setCategories([]);
        setSubcategories([]);
        setProducts([]);
        setFlashSaleProducts([]);
      }
      setIsLoading(false);
    };
    fetchData();
  }, []);

  // Carousel auto-advance
  useEffect(() => {
    const interval = setInterval(() => {
      setCarouselIndex((prev) => (prev + 1) % carouselImages.length);
    }, 4000);
    return () => clearInterval(interval);
  }, []);

  // Flash sale countdown
  const [flashSaleCountdown, setFlashSaleCountdown] = useState<string>("");
  useEffect(() => {
    if (!flashSaleEnd) return;
    const timer = setInterval(() => {
      const now = new Date();
      const diff = flashSaleEnd.getTime() - now.getTime();
      if (diff <= 0) {
        setFlashSaleCountdown("Ended");
        clearInterval(timer);
      } else {
        const h = Math.floor(diff / (1000 * 60 * 60));
        const m = Math.floor((diff / (1000 * 60)) % 60);
        const s = Math.floor((diff / 1000) % 60);
        setFlashSaleCountdown(`${h.toString().padStart(2, "0")}:${m
          .toString()
          .padStart(2, "0")}:${s.toString().padStart(2, "0")}`);
      }
    }, 1000);
    return () => clearInterval(timer);
  }, [flashSaleEnd]);

  useEffect(() => {
    if (flashSalesTimeLeft <= 0) return;
    const timer = setInterval(() => {
      setFlashSalesTimeLeft((prev) => (prev > 0 ? prev - 1 : 0));
    }, 1000);
    return () => clearInterval(timer);
  }, [flashSalesTimeLeft]);

  const formatTimer = (seconds: number) => {
    if (seconds <= 0) return "Ended";
    const h = Math.floor(seconds / 3600);
    const m = Math.floor((seconds % 3600) / 60);
    const s = seconds % 60;
    return `${h.toString().padStart(2, "0")}h : ${m.toString().padStart(2, "0")}m : ${s.toString().padStart(2, "0")}s`;
  };

  // Helpers
  const getProductImage = (product: Product) =>
    product.images && product.images.length > 0
      ? product.images[0].img_url.startsWith("http")
        ? product.images[0].img_url
        : `${import.meta.env.VITE_API_BASE_URL}${product.images[0].img_url}`
      : "https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=400&h=400&fit=crop";
  const getDiscount = (p: Product) =>
    p.original_price && p.original_price > p.price
      ? Math.round(((p.original_price - p.price) / p.original_price) * 100)
      : 0;

  // Product sections
  const newArrivals = products.filter((p) => p.is_new).slice(0, 6);
  const topRated = products
    .sort((a, b) => (b.rating || 0) - (a.rating || 0))
    .slice(0, 6);

  // Sidebar category click
  const handleSidebarCategoryClick = (cat: string) => {
    setSidebarOpen(false);
    navigate(`/category/${cat.toLowerCase().replace(/\s+/g, "-")}`);
  };

  const toggleCategoryExpansion = (catName: string) => {
    setExpandedCategories(prev => 
      prev.includes(catName) 
        ? prev.filter(cat => cat !== catName)
        : [...prev, catName]
    );
  };

  // Get subcategories for a specific category
  const getSubcategoriesForCategory = (categoryName: string): Subcategory[] => {
    const category = categories.find(cat => cat.name === categoryName);
    if (!category) return [];
    return subcategories.filter(sub => sub.category_id === category.id);
  };

  const flashSaleItems = [
    { id: 1, name: "Men Cotton Outdoor Baseball Cap", price: 630, oldPrice: 1286, discount: 51, img: "https://images.unsplash.com/photo-1517841905240-472988babdf9?auto=format&fit=crop&w=400&q=80", stock: 1 },
    { id: 2, name: "Amtec AM-01 2.1CH Multimedia Soundbar", price: 4899, oldPrice: 6607, discount: 19, img: "https://images.unsplash.com/photo-1517336714731-489689fd1ca8?auto=format&fit=crop&w=400&q=80", stock: 39 },
    { id: 3, name: "Men's Fashion Shorts And T-Shirt", price: 679, oldPrice: 957, discount: 29, img: "https://images.unsplash.com/photo-1529626455594-4ff0802cfb7e?auto=format&fit=crop&w=400&q=80", stock: 50 },
    { id: 4, name: "Men's Polo Shirt Business", price: 592, oldPrice: 972, discount: 39, img: "https://images.unsplash.com/photo-1512436991641-6745cdb1723f?auto=format&fit=crop&w=400&q=80", stock: 50 },
    { id: 5, name: "Men's Fashion 1997 Shorts", price: 832, oldPrice: 1213, discount: 31, img: "https://images.unsplash.com/photo-1503342217505-b0a15ec3261c?auto=format&fit=crop&w=400&q=80", stock: 50 },
    { id: 6, name: "Men's Wallet Card Bag", price: 788, oldPrice: 1450, discount: 46, img: "https://images.unsplash.com/photo-1519125323398-675f0ddb6308?auto=format&fit=crop&w=400&q=80", stock: 3 },
  ];

  // Auto-flip timer
  useEffect(() => {
    const timer = setInterval(() => {
      setFlippingCardIndex((prevIndex) => (prevIndex + 1) % flashSaleItems.length);
    }, 5000); // Flip every 5 seconds
    return () => clearInterval(timer);
  }, [flashSaleItems.length]);

  return (
    <div className="min-h-screen">
      <div
        className="pb-8"
        style={{
          backgroundImage: `linear-gradient(rgba(25, 25, 25, 0.6), rgba(25, 25, 25, 0.6)), url('https://images.unsplash.com/photo-1516574187841-cb9cc2ca948b?auto=format&fit=crop&w=1920&q=80')`,
          backgroundSize: "cover",
          backgroundPosition: "center",
          backgroundAttachment: "fixed",
        }}
      >
        {/* Header */}
        <header className="bg-white/80 backdrop-blur-sm shadow sticky top-0 z-30">
          <div className="max-w-7xl mx-auto flex items-center justify-between px-4 py-2">
            <div className="flex items-center space-x-4">
              <img src="https://cdn-icons-png.flaticon.com/512/1170/1170678.png" alt="Logo" className="w-10 h-10" />
              <span className="font-bold text-xl text-gray-800">YourShop</span>
            </div>
            <div className="flex-1 mx-6">
              <div className="relative">
                <input
                  type="text"
                  placeholder="I'm looking for..."
                  className="w-full py-2 pl-4 pr-10 rounded-full border border-gray-300 focus:outline-none focus:ring-2 focus:ring-purple-500"
                />
                <SearchIcon className="absolute right-3 top-1/2 -translate-y-1/2 text-gray-400 w-5 h-5" />
              </div>
            </div>
            <div className="flex items-center space-x-6">
              <button className="relative">
                <ShoppingCart className="w-6 h-6 text-gray-700" />
                <span className="absolute -top-2 -right-2 bg-pink-600 text-white text-xs rounded-full px-1">5</span>
              </button>
              <User className="w-6 h-6 text-gray-700" />
            </div>
          </div>
          <div className="bg-gray-100 border-t border-b border-gray-200">
            <div className="max-w-7xl mx-auto flex items-center px-4 py-1 text-sm text-gray-700 space-x-6 overflow-x-auto">
              <span className="font-semibold cursor-pointer" onClick={() => setActiveTab("What's New")}>What's New</span>
              <span className="font-semibold cursor-pointer" onClick={() => setActiveTab("Flash Sale")}>Flash Sale</span>
              <span className="cursor-pointer">Smart TV</span>
              <span className="cursor-pointer">Money Saving Tips</span>
              <span className="cursor-pointer">All Goods Price Drop</span>
              <span className="cursor-pointer">Redmi</span>
              <span className="cursor-pointer">Speaker</span>
              <span className="cursor-pointer">TV Stand</span>
              <span className="cursor-pointer">Garnier</span>
              <span className="cursor-pointer">Fridge</span>
            </div>
          </div>
        </header>

        {/* Main Section: Sidebar + Carousel */}
        <section className="max-w-7xl mx-auto flex flex-row mt-4 px-4">
          {/* Sidebar (sticky on desktop, collapsible on mobile) */}
          <aside className="hidden md:block w-64 mr-4 sticky top-24 self-start bg-white rounded-xl shadow border border-gray-100">
            <div className="font-semibold text-lg px-4 py-3 border-b border-gray-100 flex items-center">
              <Menu className="w-5 h-5 mr-2 text-red-500" /> Category
            </div>
            <ul className="divide-y divide-gray-100">
              {categories.slice(0, 11).map((cat) => {
                const categorySubcategories = getSubcategoriesForCategory(cat.name);
                return (
                  <li key={cat.id}>
                    <div
                      className="px-4 py-3 hover:bg-gray-50 cursor-pointer flex items-center justify-between"
                      onClick={() => handleSidebarCategoryClick(cat.name)}
                    >
                      <div className="flex items-center">
                        {categoryIcons[cat.name] || <Star className="w-5 h-5 inline-block mr-2 text-gray-300" />} 
                        {cat.name}
                      </div>
                      {categorySubcategories.length > 0 && (
                        <button
                          onClick={(e) => {
                            e.stopPropagation();
                            toggleCategoryExpansion(cat.name);
                          }}
                          className="text-gray-400 hover:text-gray-600"
                        >
                          {expandedCategories.includes(cat.name) ? '−' : '+'}
                        </button>
                      )}
                    </div>
                    {/* Subcategories */}
                    {categorySubcategories.length > 0 && expandedCategories.includes(cat.name) && (
                      <div className="bg-gray-50 border-t border-gray-100">
                        {categorySubcategories.map((subcat) => (
                          <div
                            key={subcat.id}
                            className="px-6 py-3 cursor-pointer hover:bg-gray-100 border-l-4 border-blue-500"
                            onClick={() => navigate(`/category/${cat.name.toLowerCase().replace(/\s+/g, "-")}/${subcat.name.toLowerCase().replace(/\s+/g, "-")}`)}
                          >
                            <div className="text-sm font-medium text-gray-800 mb-1">{subcat.name}</div>
                            {subcat.description && (
                              <div className="text-xs text-gray-500">{subcat.description}</div>
                            )}
                          </div>
                        ))}
                      </div>
                    )}
                  </li>
                );
              })}
            </ul>
          </aside>
          {/* Mobile sidebar button */}
          <button
            className="md:hidden fixed top-20 left-4 z-40 bg-white p-2 rounded-full shadow border border-gray-200"
            onClick={() => setSidebarOpen((v) => !v)}
          >
            <Menu className="w-6 h-6 text-red-500" />
          </button>
          {/* Mobile sidebar drawer */}
          {sidebarOpen && (
            <div className="fixed inset-0 z-50 bg-black/30" onClick={() => setSidebarOpen(false)}>
              <aside className="absolute top-0 left-0 w-64 h-full bg-white shadow-xl border-r border-gray-200">
                <div className="font-semibold text-lg px-4 py-3 border-b border-gray-100 flex items-center">
                  <Menu className="w-5 h-5 mr-2 text-red-500" /> Category
                </div>
                <ul className="divide-y divide-gray-100">
                  {categories.slice(0, 11).map((cat) => {
                    const categorySubcategories = getSubcategoriesForCategory(cat.name);
                    return (
                      <li key={cat.id}>
                        <div
                          className="px-4 py-3 hover:bg-gray-50 cursor-pointer flex items-center justify-between"
                          onClick={() => handleSidebarCategoryClick(cat.name)}
                        >
                          <div className="flex items-center">
                            {categoryIcons[cat.name] || <Star className="w-5 h-5 inline-block mr-2 text-gray-300" />} 
                            {cat.name}
                          </div>
                          {categorySubcategories.length > 0 && (
                            <button
                              onClick={(e) => {
                                e.stopPropagation();
                                toggleCategoryExpansion(cat.name);
                              }}
                              className="text-gray-400 hover:text-gray-600"
                            >
                              {expandedCategories.includes(cat.name) ? '−' : '+'}
                            </button>
                          )}
                        </div>
                        {/* Subcategories */}
                        {categorySubcategories.length > 0 && expandedCategories.includes(cat.name) && (
                          <div className="bg-gray-50 border-t border-gray-100">
                            {categorySubcategories.map((subcat) => (
                              <div
                                key={subcat.id}
                                className="px-6 py-3 cursor-pointer hover:bg-gray-100 border-l-4 border-blue-500"
                                onClick={() => navigate(`/category/${cat.name.toLowerCase().replace(/\s+/g, "-")}/${subcat.name.toLowerCase().replace(/\s+/g, "-")}`)}
                              >
                                <div className="text-sm font-medium text-gray-800 mb-1">{subcat.name}</div>
                                {subcat.description && (
                                  <div className="text-xs text-gray-500">{subcat.description}</div>
                                )}
                              </div>
                            ))}
                          </div>
                        )}
                      </li>
                    );
                  })}
                </ul>
              </aside>
            </div>
          )}
          {/* Carousel */}
          <div className="flex-1 relative min-w-0">
            {/* Tabs above carousel */}
            <div className="flex space-x-6 mb-2">
              <button
                className={`font-semibold text-lg px-2 py-1 border-b-2 ${activeTab === "What's New" ? "border-red-500 text-red-600" : "border-transparent text-gray-700"}`}
                onClick={() => setActiveTab("What's New")}
              >
                What's New
              </button>
              <button
                className={`font-semibold text-lg px-2 py-1 border-b-2 ${activeTab === "Flash Sale" ? "border-red-500 text-red-600" : "border-transparent text-gray-700"}`}
                onClick={() => setActiveTab("Flash Sale")}
              >
                Flash Sale
              </button>
            </div>
            {/* Carousel */}
            <div className="relative w-full h-[260px] md:h-[340px] rounded-xl overflow-hidden shadow-lg">
              {carouselImages.map((slide, idx) => (
                <div
                  key={idx}
                  className={`absolute inset-0 transition-opacity duration-700 ease-in-out ${carouselIndex === idx ? 'opacity-100 z-10' : 'opacity-0 z-0'}`}
                  aria-hidden={carouselIndex !== idx}
                >
                  <img
                    src={slide.url}
                    alt={slide.caption}
                    className="w-full h-full object-cover object-center"
                  />
                  <div className="absolute inset-0 bg-black/30" />
                  <div className="absolute left-0 right-0 top-1/2 -translate-y-1/2 text-center z-20">
                    <h2 className="text-2xl md:text-3xl font-bold text-white mb-3 drop-shadow-lg">{slide.caption}</h2>
                    <button className="bg-white text-purple-600 px-6 py-2 rounded-full font-semibold text-base hover:bg-gray-100 shadow-xl transition-all duration-300">
                      {slide.cta}
                    </button>
                  </div>
                </div>
              ))}
              {/* Carousel Arrows */}
              <button
                className="absolute left-4 top-1/2 -translate-y-1/2 bg-white/80 hover:bg-white p-2 rounded-full shadow-lg z-20"
                onClick={() => setCarouselIndex((carouselIndex - 1 + carouselImages.length) % carouselImages.length)}
              >
                <ChevronLeft className="w-6 h-6 text-gray-700" />
              </button>
              <button
                className="absolute right-4 top-1/2 -translate-y-1/2 bg-white/80 hover:bg-white p-2 rounded-full shadow-lg z-20"
                onClick={() => setCarouselIndex((carouselIndex + 1) % carouselImages.length)}
              >
                <ChevronRight className="w-6 h-6 text-gray-700" />
              </button>
              {/* Carousel Dots */}
              <div className="absolute bottom-4 left-1/2 -translate-x-1/2 flex space-x-2 z-20">
                {carouselImages.map((_, idx) => (
                  <button
                    key={idx}
                    className={`w-3 h-3 rounded-full transition-all duration-300 ${carouselIndex === idx ? "bg-white" : "bg-white/50"}`}
                    onClick={() => setCarouselIndex(idx)}
                  />
                ))}
              </div>
            </div>
          </div>
        </section>

        {/* Flash Sales | Live Now Section */}
        <section className="max-w-7xl mx-auto px-4 mt-8">
          <div className="flex items-center justify-between bg-red-600 text-white rounded-t-lg px-4 py-2">
            <div className="flex items-center gap-2 font-bold text-lg">
              <span className="text-yellow-300">⚡</span> Flash Sales | Live Now
            </div>
            <div className="flex items-center gap-2 text-base font-semibold">
              Time Left: <span className="font-mono bg-white text-red-600 rounded px-2 py-0.5">{formatTimer(flashSalesTimeLeft)}</span>
            </div>
            <a href="#" className="text-white underline font-semibold hover:text-yellow-200">See All</a>
          </div>
          <div className="overflow-x-auto bg-transparent rounded-b-lg pb-2">
            <div className="flex gap-4 py-4 px-2">
              {flashSaleItems.map((item, index) => (
                <div key={item.id} className={`w-56 h-48 flex-shrink-0 flip-card ${index === flippingCardIndex ? 'is-flipping' : ''}`}>
                  <div className="flip-card-inner rounded-lg shadow-lg">
                    <div className="flip-card-front p-2 border border-gray-100">
                      {/* --- Original Card Content --- */}
                      <div className="relative">
                        <img src={item.img} alt={item.name} className="h-20 w-full object-contain mb-2" />
                        <span className="absolute top-1 left-1 bg-yellow-400 text-xs font-bold px-2 py-0.5 rounded">-{item.discount}%</span>
                      </div>
                      <div className="text-xs text-gray-700 truncate mb-1 font-medium flex-grow">{item.name}</div>
                      <div className="flex items-center gap-2 mb-1">
                        <span className="text-red-600 font-bold text-base">KSh {item.price}</span>
                        <span className="text-gray-400 line-through text-xs">KSh {item.oldPrice}</span>
                      </div>
                      <div className="h-2 w-full bg-gray-200 rounded-full overflow-hidden mb-1">
                        <div className="bg-orange-500 h-2 rounded-full" style={{ width: `${Math.max(5, 100 - item.stock)}%` }} />
                      </div>
                      <div className="text-xs text-gray-500">{item.stock} item{item.stock !== 1 ? 's' : ''} left</div>
                      {/* --- End Original Card Content --- */}
                    </div>
                    <div className="flip-card-back">
                      <h3 className="font-bold text-lg mb-2">{item.name}</h3>
                      <button
                        className="bg-white text-red-500 font-semibold px-4 py-2 rounded-full hover:bg-red-100 transition-colors"
                        onClick={() => navigate(`/product/${item.id}`)}
                      >
                        Shop Now
                      </button>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </section>

        {/* Sponsored Products Section */}
        <section className="max-w-7xl mx-auto px-4 mt-8">
          <div className="flex items-center justify-between bg-red-600 text-white rounded-t-lg px-4 py-2">
            <div className="flex items-center gap-2 font-bold text-lg">
              <span className="text-yellow-300">⚡</span>
              <h2 className="text-xl font-bold">Sponsored products</h2>
            </div>
            <div className="flex items-center gap-2 text-base font-semibold">
              Time Left: <span className="font-mono bg-white text-red-600 rounded px-2 py-0.5">{formatTimer(flashSalesTimeLeft)}</span>
            </div>
            <a href="#" className="text-white underline font-semibold hover:text-yellow-200">See All</a>
          </div>
          <div className="overflow-x-auto bg-transparent rounded-b-lg pb-2">
            <div className="flex gap-4 py-4 px-2">
              {[
                { id: 1, name: "NIVEA Creme Soft Shower Gel", price: 843, img: "https://images.unsplash.com/photo-1620916566398-39f19383145c?auto=format&fit=crop&w=400&q=80" },
                { id: 2, name: "NIVEA MEN Cool Kick Antiperspirant", price: 720, img: "https://images.unsplash.com/photo-1515378791036-0648a3ef77b2?auto=format&fit=crop&w=400&q=80" },
                { id: 3, name: "Ecoflow 256Wh 300W Power Station", price: 22998, oldPrice: 66965, discount: 66, img: "https://images.unsplash.com/photo-1519125323398-675f0ddb6308?auto=format&fit=crop&w=400&q=80" },
                { id: 4, name: "Minrich F Minrich F Minrich", price: 1615, oldPrice: 3500, discount: 54, img: "https://images.unsplash.com/photo-1517841905240-472988babdf9?auto=format&fit=crop&w=400&q=80" },
                { id: 5, name: "Dvee Organics Somali Qasil", price: 500, oldPrice: 650, discount: 23, img: "https://images.unsplash.com/photo-1503342217505-b0a15ec3261c?auto=format&fit=crop&w=400&q=80" },
                { id: 6, name: "RUTANPUMP 24V 50M", price: 19999, oldPrice: 39999, discount: 50, img: "https://images.unsplash.com/photo-1512436991641-6745cdb1723f?auto=format&fit=crop&w=400&q=80" },
              ].map((item) => (
                <div key={item.id} className="bg-white rounded-lg shadow p-2 border border-gray-100 flex flex-col">
                  <div className="relative">
                    <img src={item.img} alt={item.name} className="h-28 w-full object-contain bg-white rounded-lg mb-2" />
                    {item.discount && <span className="absolute top-2 left-2 bg-yellow-400 text-xs font-bold px-2 py-0.5 rounded">-{item.discount}%</span>}
                  </div>
                  <div className="text-xs text-gray-700 truncate mb-1 font-medium">{item.name}</div>
                  <div className="flex items-center gap-2 mb-1">
                    <span className="text-red-600 font-bold text-base">KSh {item.price}</span>
                    {item.oldPrice && <span className="text-gray-400 line-through text-xs">KSh {item.oldPrice}</span>}
                  </div>
                </div>
              ))}
            </div>
          </div>
        </section>
      </div>
      <div
        className="py-8"
        style={{
          backgroundImage: `linear-gradient(rgba(25, 25, 25, 0.7), rgba(25, 25, 25, 0.7)), url('https://images.unsplash.com/photo-1483985988355-763728e1935b?auto=format&fit=crop&w=1920&q=80')`,
          backgroundSize: "cover",
          backgroundPosition: "center",
          backgroundAttachment: "fixed",
        }}
      >
      {/* Top Selling Items Section */}
      <section className="max-w-7xl mx-auto px-4">
        <div className="flex items-center justify-between mb-4">
          <div className="flex items-center">
            <span className="text-pink-500 text-2xl mr-2">★</span>
            <h2 className="text-xl font-bold">Top selling items</h2>
          </div>
          <a href="#" className="text-pink-600 font-semibold hover:underline">See All</a>
        </div>
        <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6 gap-2 sm:gap-4 px-2 sm:px-4">
          {[
            { id: 1, name: "4Pcs Necklace Set Teardrop", price: 226, oldPrice: 428, discount: 47, img: "https://images.unsplash.com/photo-1519389950473-47ba0277781c?auto=format&fit=crop&w=400&q=80" },
            { id: 2, name: "5 In 1 Female Electric Shaver", price: 530, oldPrice: 991, discount: 47, img: "https://images.unsplash.com/photo-1517841905240-472988babdf9?auto=format&fit=crop&w=400&q=80" },
            { id: 3, name: "Apple MacBook Pro 13\"", price: 24000, oldPrice: 30000, discount: 20, img: "https://images.unsplash.com/photo-1517336714731-489689fd1ca8?auto=format&fit=crop&w=400&q=80" },
            { id: 4, name: "ARHANORY 5 In 1 Multi-set", price: 310, oldPrice: 473, discount: 35, img: "https://images.unsplash.com/photo-1504674900247-0877df9cc836?auto=format&fit=crop&w=400&q=80" },
            { id: 5, name: "HD-05+ 1080P 16X Digital Camera", price: 4499, oldPrice: 6427, discount: 30, img: "https://images.unsplash.com/photo-1465101178521-c1a9136a3b99?auto=format&fit=crop&w=400&q=80" },
            { id: 6, name: "Fitted Sheet Waterproof", price: 654, oldPrice: 2222, discount: 71, img: "https://images.unsplash.com/photo-1511707171634-5f897ff02aa9?auto=format&fit=crop&w=400&q=80" },
          ].map((item) => (
            <div key={item.id} className="bg-white rounded-lg shadow p-2 border border-gray-100 flex flex-col">
              <div className="relative">
                <img src={item.img} alt={item.name} className="h-28 w-full object-contain bg-white rounded-lg mb-2" />
                {item.discount && <span className="absolute top-2 left-2 bg-yellow-400 text-xs font-bold px-2 py-0.5 rounded">-{item.discount}%</span>}
              </div>
              <div className="text-xs text-gray-700 truncate mb-1 font-medium">{item.name}</div>
              <div className="flex items-center gap-2 mb-1">
                <span className="text-red-600 font-bold text-base">KSh {item.price}</span>
                {item.oldPrice && <span className="text-gray-400 line-through text-xs">KSh {item.oldPrice}</span>}
              </div>
            </div>
          ))}
        </div>
      </section>

      {/* You May Also Like Section (Product Grid, Static Data) */}
      <section className="max-w-7xl mx-auto px-4 mt-8">
        <div className="flex items-center mb-4">
          <span className="text-orange-500 text-2xl mr-2">★</span>
          <h2 className="text-xl font-bold">You May Also Like</h2>
        </div>
        {/* Static product data for display */}
        {(() => {
          const staticProducts = [
            { id: 1, name: "Mercury Maverick 650VA Line Interactive UPS", price: 7085, rating: 0, img_url: "https://images.unsplash.com/photo-1519389950473-47ba0277781c?auto=format&fit=crop&w=400&q=80" },
            { id: 2, name: "Large Dial Watches for Men Waterproof Mens...", price: 629, rating: 4, img_url: "https://images.unsplash.com/photo-1516574187841-cb9cc2ca948b?auto=format&fit=crop&w=400&q=80" },
            { id: 3, name: "LIMITED OFFER JUST FOR YOU", price: 2029, rating: 1, img_url: "https://images.unsplash.com/photo-1512436991641-6745cdb1723f?auto=format&fit=crop&w=400&q=80" },
            { id: 4, name: "Refurbished Redmi Note 9 3/4GB RAM 64/128GB", price: 8999, rating: 2, img_url: "https://images.unsplash.com/photo-1511707171634-5f897ff02aa9?auto=format&fit=crop&w=400&q=80" },
            { id: 5, name: "1 PCS Military Lighter Electronic Watch", price: 899, rating: 3, img_url: "https://images.unsplash.com/photo-1465101178521-c1a9136a3b99?auto=format&fit=crop&w=400&q=80" },
            { id: 6, name: "Oraimo Watch 5 Lite 2.01\" HD", price: 2039, rating: 2, img_url: "https://images.unsplash.com/photo-1519125323398-675f0ddb6308?auto=format&fit=crop&w=400&q=80" },
            { id: 7, name: "Refurbished OPPO Reno 2z 128GB+8GB 6.5 in...", price: 11499, rating: 5, img_url: "https://images.unsplash.com/photo-1517336714731-489689fd1ca8?auto=format&fit=crop&w=400&q=80" },
            { id: 8, name: "4PCS Set Fashion Mens Sports Watches", price: 399, rating: 4, img_url: "https://images.unsplash.com/photo-1529626455594-4ff0802cfb7e?auto=format&fit=crop&w=400&q=80" },
            { id: 9, name: "Fashion Mens Sports Watches Luxury Men...", price: 299, rating: 4, img_url: "https://images.unsplash.com/photo-1503342217505-b0a15ec3261c?auto=format&fit=crop&w=400&q=80" },
            { id: 10, name: "Refurbished OPPO R9 oppo r9 -x9009 - 5.5\"", price: 4699, rating: 4, img_url: "https://images.unsplash.com/photo-1511707171634-5f897ff02aa9?auto=format&fit=crop&w=400&q=80" },
            { id: 11, name: "Refurbished VIVO Y93s Y93 6.2 inch 64GB", price: 5389, rating: 3, img_url: "https://images.unsplash.com/photo-1504674900247-0877df9cc836?auto=format&fit=crop&w=400&q=80" },
            { id: 12, name: "Refurbished oppo Reno 256GB/128GB+6GB", price: 10599, rating: 4, img_url: "https://images.unsplash.com/photo-1510557880182-3d4d3c1b3a49?auto=format&fit=crop&w=400&q=80" },
          ];
          return (
            <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-6 gap-2 sm:gap-4 px-2 sm:px-4">
              {staticProducts.map((product) => (
                <div
                  key={product.id}
                  className="bg-white rounded-lg shadow hover:shadow-lg transition p-2 flex flex-col max-h-60 cursor-pointer hover:ring-2 hover:ring-blue-400"
                  onClick={() => navigate(`/product/${product.id}`)}
                >
                  <img
                    src={product.img_url}
                    alt={product.name}
                    className="h-36 w-full object-contain bg-white rounded-lg border border-gray-100 shadow-sm mb-2 p-2 flex items-center justify-center"
                  />
                  <div className="flex-1">
                    <div className="text-xs text-gray-700 truncate mb-1 font-medium">{product.name.length > 32 ? product.name.slice(0, 32) + '…' : product.name}</div>
                    <div className="text-red-600 font-bold text-lg mb-1">
                      KSh {product.price.toLocaleString()}
                    </div>
                    <div className="flex items-center text-yellow-500 text-xs mb-1">
                      {[...Array(5)].map((_, i) => (
                        <Star
                          key={i}
                          className={`w-4 h-4 ${i < product.rating ? 'fill-current' : 'text-gray-300'}`}
                        />
                      ))}
                      <span className="ml-1 text-gray-500">({product.rating || 0})</span>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          );
        })()}
      </section>
      </div>
    </div>
  );
};

export default Test;
